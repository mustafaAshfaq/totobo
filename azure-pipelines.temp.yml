# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - prototype

jobs:
  - job: initial_setup
    pool:
      vmImage: 'ubuntu-latest'
    steps:
        - template: .azure-pipelines/steps/install-node-modules.yml
        - script: echo 'installing dependencies'
  - job: builds
    dependsOn: initial_setup
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: .azure-pipelines/steps/install-node-modules.yml
      - script:   yarn nx run-many --target=build --all --prod
  - job: copy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: CopyFiles@2
      
      inputs:
        Contents: 'dist/apps/bahis-ui/**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/ui'
        CleanTargetFolder: true
    - task: CopyFiles@2
      inputs:
        Contents: 'dist/apps/totobo-api/**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/api'''
        CleanTargetFolder: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/ui'
        ArtifactName: 'ui'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/api'
        ArtifactName: 'api'
    



# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master
  
  variables:
  
    # Azure Resource Manager connection created during pipeline creation
    azureSubscription: '14ce8513-c5c5-4ba7-8b57-5c58765322c8'
  
    # Web app name
    webAppName: 'totobo'
  
    # Environment name
    environmentName: 'totobo'
  
    # Agent VM image name
    vmImageName: 'ubuntu-latest'
  
  stages:
  - stage: Build
    displayName: Build stage
    jobs:
    - job: Build
      displayName: Build
      pool:
        vmImage: $(vmImageName)
  
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'
  
      - script: |
          npm install
          npm run build --if-present
          npm run test --if-present
        displayName: 'npm install, build and test'
  
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true
  
      - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        artifact: drop
  
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: $(environmentName)
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureWebApp@1
              displayName: 'Azure Web App Deploy: totobo'
              inputs:
                azureSubscription: $(azureSubscription)
                appType: webAppLinux
                appName: $(webAppName)
                runtimeStack: 'NODE|10.10'
                package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                startUpCommand: 'npm run start'





# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - prototype
variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'Pay-As-You-Go'

  # Web app name
  webAppName: 'totobo'

  # Environment name
  environmentName: 'totobo'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
stages:
- stage: Build
  displayName: 'Build'
  jobs:
  - job: initial_setup
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: .azure-pipelines/steps/install-node-modules.yml
    - script: echo 'installing dependencies'
  - job: builds
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: .azure-pipelines/steps/install-node-modules.yml
      - script:   yarn nx run-many --target=build --all --prod
      - task: ArchiveFiles@2
        displayName: 'archive ui'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/apps/bahis-ui'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/ui/$(Build.BuildId).zip'
          replaceExistingArchive: true
      - upload: $(Build.ArtifactStagingDirectory)/ui/$(Build.BuildId).zip
        artifact: ui
      - task: ArchiveFiles@2
        displayName: 'archive api'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/apps/totobo-api'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/api/$(Build.BuildId).zip'
          replaceExistingArchive: true
      - upload: $(Build.ArtifactStagingDirectory)/api/$(Build.BuildId).zip
        artifact: api
      - script: echo '$(System.DefaultWorkingDirectory)'

